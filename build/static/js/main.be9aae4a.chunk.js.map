{"version":3,"sources":["assets/labels.js","assets/theme.js","containers/Calendar/events.js","containers/Calendar/components/DatePickerToolbar.jsx","containers/Calendar/components/CalendarToolbar.jsx","containers/Calendar/components/constants.js","containers/Calendar/components/SearchUser.jsx","containers/Calendar/components/AddVisit.jsx","components/layout/Navbar/index.jsx","containers/Calendar/index.jsx","containers/Reqistration/components/LoginForm.jsx","containers/Reqistration/components/RegistrationForm.jsx","containers/Reqistration/index.jsx","containers/Reports/index.jsx","containers/Client/components/Form.jsx","containers/Client/components/List.jsx","containers/Client/index.jsx","containers/Warehouse/index.jsx","App.js","actions/actionTypes.js","constants.js","reducers/events.js","reducers/index.js","enviroments/config.js","index.js"],"names":["module","exports","appTitle","calendarTitle","dashboardTitle","reportTitle","warehouseTitle","selectDate","selectStart","selectEnd","search","phoneNumber","phoneNumberCopy","phoneRequiredError","phoneUniqueError","phoneFormatError","getActivateCodeButton","provideCodeLabel","haveNotGetCodeLabel","sentCodeAgainLabel","codeButtonLabel","codeValidError","startTitle","startCopy","yourAccount","yourCompanyAccount","accountCreationTime","createAccountButtonLabel","iGotSmsLabel","loginCopy","loginButtonLabel","joinTitle","theme","createMuiTheme","palette","primary","main","secondary","now","Date","id","title","start","end","desc","resourceId","setHours","getHours","StaticDatePicker","props","useState","date","changeDate","startDate","changeStartDate","expanded","changeOpen","handleExpandClick","open","prevWeek","element","console","log","moment","clone","add","nextWeek","handlers","useSwipeable","onSwipedDown","onSwipedUp","weeklyPickerHandlers","onSwipedRight","onSwipedLeft","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","className","DatePicker","autoOk","variant","value","onChange","handleChangeDate","disableToolbar","animateYearScrolling","classNames","container","prevWeekArrow","nextWeekArrow","dayBox","dayCircleContainer","dayCicle","dayCircleTodayText","dayCircleUnavailable","dayCircleUnavailableText","dayCicleSelected","secondLineFormat","multipleDaySelect","onPrevClick","onNextClick","useStyles","makeStyles","small","width","spacing","height","CalendarToolbar","employee","classes","Avatar","alt","src","resourceTitle","ADD_USER","gql","SearchUser","useMutation","addUser","initialValues","phone","onSubmit","values","variables","newUserInput","render","submitForm","isSubmitting","setFieldValue","component","TextField","name","type","label","Button","color","disabled","onClick","AddVisit","React","Component","constructor","super","this","setState","handleChangeOpen","state","events","Drawer","anchor","IconButton","icon","faChevronDown","toggleDrawer","faTimes","inputVariant","labels","format","InputAdornmentProps","position","fullWidth","TimePicker","Paper","faPlus","newEvent","marginTop","LabelBottomNavigation","setValue","BottomNavigation","event","newValue","BottomNavigationAction","to","faCalendarAlt","faChartBar","faPlusSquare","faCog","DragAndDropCalendar","withDragAndDrop","Calendar","Dnd","getResourceMap","moveEvent","isAllDay","droppedOnAllDaySlot","idx","indexOf","allDay","updatedEvent","nextEvents","splice","resizeEvent","map","existingEvent","slotInfo","idList","a","hour","Math","max","concat","undefined","localizer","momentLocalizer","selectable","onEventDrop","resizable","step","components","toolbar","resourceHeader","resource","timeGutterHeader","style","minHeight","onEventResize","onSelectSlot","onDragStart","defaultView","Views","DAY","defaultDate","resources","resourceIdAccessor","resourceTitleAccessor","LoginForm","login","password","RegistrationForm","onError","err","ValidationTextField","loading","error","data","withStyles","root","borderColor","borderWidth","activationCode","surname","validate","errors","length","autoFocus","onKeyUp","Registration","openLogin","setLoginOpen","openRegistration","setRegistrationOpen","List","ListItem","ListItemIcon","faCircle","ListItemText","onClose","EXCHANGE_RATES","Dashboard","useQuery","companies","ClientForm","useParams","client","additionalInfo","ClientsList","match","useRouteMatch","clients","_id","key","url","Clients","path","Warehouse","App","Client","statusType","initialState","status","heroes","action","payload","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ApolloClient","uri","graphQLErrors","networkError","operation","forward","extensions","code","oldHeaders","getContext","headers","setContext","utils","DateFnsUtils","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.be9aae4a.chunk.js","sourcesContent":["module.exports = {\r\n    appTitle: 'HairApp',\r\n    calendarTitle: 'Calendar',\r\n    dashboardTitle: 'Dashboard',\r\n    reportTitle: 'Report',\r\n    warehouseTitle: 'Warehouse',\r\n    selectDate: 'Wybierz dzień',\r\n    selectStart: 'Od',\r\n    selectEnd: 'Do',\r\n    search: 'Szukaj fryzjera',\r\n\r\n    phoneNumber: 'Numer telefonu',\r\n    phoneNumberCopy: 'Zacznij od podania swojego numeru telefonu, wyślemy na niego kod SMS, który pozwoli utworzyć konto.',\r\n    phoneRequiredError: 'Podaj numer telefonu',\r\n    phoneUniqueError: 'Posiadasz już konto, teraz możesz się zalogować.',\r\n    phoneFormatError: 'Zły format',\r\n    getActivateCodeButton: 'wyślij kod aktywacyjny',\r\n    provideCodeLabel: 'Wpisz kod, który dostałeś/aś w SMS',\r\n    haveNotGetCodeLabel: 'Nie otrzymałeś kodu?',\r\n    sentCodeAgainLabel: 'Wyślij ponownie kod SMS.',\r\n    codeButtonLabel: 'potwierdź kod SMS',\r\n    codeValidError: 'Niewłaściwy kod, spróbuj jeszcze raz.',\r\n\r\n    startTitle: 'Cześć',\r\n    startCopy: 'chcemy aby ta aplikacja pomogła Ci ogarnąć część pracy w salonie. Jeśli też tego chcesz to potrzebujesz  stworzyć dwie rzeczy: ',\r\n    yourAccount: 'swoje konto',\r\n    yourCompanyAccount: 'konto dla Twojego salonu',\r\n    accountCreationTime: 'Całość powinna zająć ok 3 min. :-) ',\r\n\r\n    createAccountButtonLabel: 'chcę utworzyć konto',\r\n    iGotSmsLabel: 'mam już kod SMS',\r\n    loginCopy: 'Jeśli już masz konto:',\r\n    loginButtonLabel: 'zaloguj się',\r\n    joinTitle: 'Dołącz do '\r\n};\r\n","import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#FF2366'\r\n        },\r\n        secondary: {\r\n            main: '#5900FF'\r\n        },\r\n    },\r\n});\r\n","const now = new Date()\r\n\r\nexport default [\r\n    // {\r\n    //     id: 0,\r\n    //     title: 'Koloryzacja',\r\n    //     client: 'Magda',\r\n    //     start: new Date(2020, 4, 18, 11, 0, 0),\r\n    //     end: new Date(2020, 4, 18, 13, 0, 0),\r\n    //     resourceId: 1\r\n    // },\r\n    // {\r\n    //     id: 1,\r\n    //     title: 'Strzyżenie',\r\n    //     client: 'Natalia',\r\n    //     start: new Date(2020, 4, 18, 15),\r\n    //     end: new Date(2020, 4, 18, 16),\r\n    //     resourceId: 2\r\n    // },\r\n    //\r\n    // {\r\n    //     id: 2,\r\n    //     title: 'Koloryzacja + strzyżenie',\r\n    //     client: 'Ania',\r\n    //     start: new Date(2020, 4, 18, 9),\r\n    //     end: new Date(2020, 4, 18, 13),\r\n    //     resourceId: 3\r\n    // },\r\n    //\r\n    // {\r\n    //     id: 3,\r\n    //     title: 'Koloryzacja + strzyżenie',\r\n    //     client: 'Justyna',\r\n    //     start: new Date(2020, 4, 19, 9),\r\n    //     end: new Date(2020, 4, 19, 13),\r\n    //     resourceId: 1\r\n    // },\r\n    //\r\n    // {\r\n    //     id: 4,\r\n    //     title: 'Koloryzacja + strzyżenie',\r\n    //     client: 'Justyna',\r\n    //     start: new Date(2020, 4, 19, 10),\r\n    //     end: new Date(2020, 4, 19, 13),\r\n    //     resourceId: 2\r\n    // },\r\n    // {\r\n    //     id: 5,\r\n    //     title: 'Ploteczki',\r\n    //     client: 'Sabina, Paulina',\r\n    //     start: new Date(2020, 4, 19, 11),\r\n    //     end: new Date(2020, 4, 19, 12),\r\n    //     resourceId: 2\r\n    // },\r\n    // {\r\n    //     id: 6,\r\n    //     title: 'Meeting',\r\n    //     start: new Date(),\r\n    //     end: new Date(),\r\n    //     desc: 'Pre-meeting meeting, to prepare for the meeting',\r\n    // },\r\n    {\r\n        id: 7,\r\n        title: 'Lunch',\r\n        start: new Date(2020, 4, 18, 12, 0, 0, 0),\r\n        end: new Date(2020, 4, 18, 13, 0, 0, 0),\r\n        desc: 'Power lunch',\r\n        resourceId: 1\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Meeting',\r\n        start: new Date(2015, 3, 12, 14, 0, 0, 0),\r\n        end: new Date(2015, 3, 12, 15, 0, 0, 0),\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'Happy Hour',\r\n        start: new Date(2015, 3, 12, 17, 0, 0, 0),\r\n        end: new Date(2015, 3, 12, 17, 30, 0, 0),\r\n        desc: 'Most important meal of the day',\r\n    },\r\n    {\r\n        id: 10,\r\n        title: 'Dinner',\r\n        start: new Date(2015, 3, 12, 20, 0, 0, 0),\r\n        end: new Date(2015, 3, 12, 21, 0, 0, 0),\r\n    },\r\n    {\r\n        id: 11,\r\n        title: 'Birthday Party',\r\n        start: new Date(2015, 3, 13, 7, 0, 0),\r\n        end: new Date(2015, 3, 13, 10, 30, 0),\r\n    },\r\n    {\r\n        id: 12,\r\n        title: 'Late Night Event',\r\n        start: new Date(2015, 3, 17, 19, 30, 0),\r\n        end: new Date(2015, 3, 18, 2, 0, 0),\r\n    },\r\n    {\r\n        id: 12.5,\r\n        title: 'Late Same Night Event',\r\n        start: new Date(2015, 3, 17, 19, 30, 0),\r\n        end: new Date(2015, 3, 17, 23, 30, 0),\r\n    },\r\n    {\r\n        id: 13,\r\n        title: 'Multi-day Event',\r\n        start: new Date(2015, 3, 20, 19, 30, 0),\r\n        end: new Date(2015, 3, 22, 2, 0, 0),\r\n    },\r\n    {\r\n        id: 14,\r\n        title: 'Today',\r\n        start: new Date(new Date().setHours(new Date().getHours() - 3)),\r\n        end: new Date(new Date().setHours(new Date().getHours() + 3)),\r\n    },\r\n    {\r\n        id: 15,\r\n        title: 'Point in Time Event',\r\n        start: now,\r\n        end: now,\r\n    },\r\n    {\r\n        id: 16,\r\n        title: 'Video Record',\r\n        start: new Date(2015, 3, 14, 15, 30, 0),\r\n        end: new Date(2015, 3, 14, 19, 0, 0),\r\n    },\r\n    {\r\n        id: 17,\r\n        title: 'Dutch Song Producing',\r\n        start: new Date(2015, 3, 14, 16, 30, 0),\r\n        end: new Date(2015, 3, 14, 20, 0, 0),\r\n    },\r\n    {\r\n        id: 18,\r\n        title: 'Itaewon Halloween Meeting',\r\n        start: new Date(2015, 3, 14, 16, 30, 0),\r\n        end: new Date(2015, 3, 14, 17, 30, 0),\r\n    },\r\n    {\r\n        id: 19,\r\n        title: 'Online Coding Test',\r\n        start: new Date(2015, 3, 14, 17, 30, 0),\r\n        end: new Date(2015, 3, 14, 20, 30, 0),\r\n    },\r\n    {\r\n        id: 20,\r\n        title: 'An overlapped Event',\r\n        start: new Date(2015, 3, 14, 17, 0, 0),\r\n        end: new Date(2015, 3, 14, 18, 30, 0),\r\n    },\r\n    {\r\n        id: 21,\r\n        title: 'Phone Interview',\r\n        start: new Date(2015, 3, 14, 17, 0, 0),\r\n        end: new Date(2015, 3, 14, 18, 30, 0),\r\n    },\r\n    {\r\n        id: 22,\r\n        title: 'Cooking Class',\r\n        start: new Date(2015, 3, 14, 17, 30, 0),\r\n        end: new Date(2015, 3, 14, 19, 0, 0),\r\n    },\r\n    {\r\n        id: 23,\r\n        title: 'Go to the gym',\r\n        start: new Date(2015, 3, 14, 18, 30, 0),\r\n        end: new Date(2015, 3, 14, 20, 0, 0),\r\n    },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from \"@material-ui/core\";\r\nimport ReactWeeklyDayPicker from 'react-weekly-day-picker';\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport * as moment from 'moment';\r\nimport '../Calendar.scss'\r\nimport './DatePickerToolbar.scss'\r\n\r\n\r\nconst StaticDatePicker = (props) => {\r\n    const [date, changeDate] = useState(new Date());\r\n    const [startDate, changeStartDate] = useState(new Date());\r\n    const [expanded, changeOpen] = useState(false);\r\n    const handleExpandClick = (open) => {\r\n        changeOpen(open);\r\n    };\r\n    const handleChangeDate = (date) => {\r\n        changeDate(date);\r\n        props.handleChangeDate(date)\r\n    };\r\n\r\n    const prevWeek = (element) => {\r\n        console.log('prev')\r\n        changeStartDate(moment(element).clone().add(-7, 'days'));\r\n    }\r\n\r\n    const nextWeek = (element) => {\r\n        changeStartDate(moment(element).clone().add(7, 'days'));\r\n    }\r\n\r\n    const handlers = useSwipeable({\r\n        onSwipedDown: () => handleExpandClick(true),\r\n        onSwipedUp: () => handleExpandClick(false),\r\n    });\r\n\r\n    const weeklyPickerHandlers = useSwipeable({\r\n        onSwipedRight: () => prevWeek(startDate),\r\n        onSwipedLeft: () => nextWeek(startDate),\r\n    });\r\n\r\n    const classNames = {\r\n        container : 'weekly-container',\r\n        prevWeekArrow: 'prev-week-arrow',\r\n        nextWeekArrow: 'next-week-arrow',\r\n        dayBox: 'day-box',\r\n        dayCircleContainer: 'day-circle-container',\r\n        dayCicle: 'day-cicle',\r\n        dayCircleTodayText: 'day-circle-today-text',\r\n        dayCircleUnavailable: 'day-circle-unavailable',\r\n        dayCircleUnavailableText: 'day-circle-unavailable-text',\r\n        dayCicleSelected: 'day-cicle-selected',\r\n    }\r\n    console.log(startDate);\r\n    return (\r\n        <div {...handlers}>\r\n            <ExpansionPanel expanded={expanded}>\r\n                <ExpansionPanelSummary />\r\n                <ExpansionPanelDetails className=\"picker-container\">\r\n                    <DatePicker\r\n                        autoOk\r\n                        variant=\"static\"\r\n                        value={date}\r\n                        onChange={handleChangeDate}\r\n                        disableToolbar\r\n                        animateYearScrolling\r\n                    />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel expanded={!expanded}>\r\n                <ExpansionPanelSummary />\r\n                <ExpansionPanelDetails {...weeklyPickerHandlers} className=\"picker-container\">\r\n                <ReactWeeklyDayPicker\r\n                    classNames={classNames}\r\n                    secondLineFormat={'D'}\r\n                    multipleDaySelect={false}\r\n                    onPrevClick={prevWeek}\r\n                    onNextClick={nextWeek}\r\n                    startDate={startDate}\r\n                />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default StaticDatePicker;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport '../Calendar.scss'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    small: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nconst CalendarToolbar = ({employee}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"calendar-toolbar\">\r\n            <Avatar alt={employee.reportTitle} src=\"/static/images/avatar/1.jpg\" className={classes.small}/>\r\n            <span>{employee.resourceTitle}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarToolbar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const ADD_USER = gql`\r\n  mutation AddUser($newUserInput: NewUserInput!) {\r\n    addUser(newUserInput: $newUserInput) {\r\n        _id\r\n        activationCode\r\n      }\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel,\r\n    FormControlLabel,\r\n} from '@material-ui/core';\r\nimport MuiTextField from '@material-ui/core/TextField';\r\nimport {\r\n    fieldToTextField,\r\n    TextField,\r\n    TextFieldProps,\r\n    Select,\r\n    Switch,\r\n} from 'formik-material-ui';\r\nimport {\r\n    TimePicker,\r\n    DatePicker,\r\n    DateTimePicker,\r\n} from 'formik-material-ui-pickers';\r\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {ADD_USER} from \"./constants\";\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\n\r\nconst SearchUser = () => {\r\n    const [addUser] = useMutation(ADD_USER);\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                phone: ''\r\n            }}\r\n            onSubmit={(values) => {\r\n                addUser({variables: {newUserInput: values}})\r\n            }}\r\n            render={({submitForm, isSubmitting, values, setFieldValue}) => (\r\n                <Form>\r\n                    <Field\r\n                        component={TextField}\r\n                        variant=\"outlined\"\r\n                        name=\"phone\"\r\n                        type=\"phone\"\r\n                        label=\"phone\"\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting}\r\n                        onClick={submitForm}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchUser;\r\n","import React from 'react'\r\nimport { Drawer, IconButton, Button, Paper, TextField } from '@material-ui/core'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport '../../../containers/Calendar/Calendar.scss';\r\nimport { faTimes, faPlus, faChevronDown, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { KeyboardDatePicker, TimePicker } from \"@material-ui/pickers\";\r\nimport labels from '../../../assets/labels';\r\nimport SearchUser from \"./SearchUser\";\r\n\r\n\r\nclass AddVisit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    handleChangeDate = (date) => {\r\n        this.setState({date})\r\n    }\r\n\r\n    handleChangeOpen = (open = true) => {\r\n        this.setState({open})\r\n    }\r\n\r\n    render() {\r\n        const {date, events, open} = this.state;\r\n        return (\r\n            <div className='drawer'>\r\n                <Drawer anchor=\"bottom\" open={open}>\r\n                    <div className='drawer-middle'>\r\n                        <div className=\"drawer-header\">\r\n                            <p>Fryzjer</p>\r\n                            <IconButton onClick={() => this.handleChangeOpen(false)}><FontAwesomeIcon icon={faChevronDown} /></IconButton>\r\n                        </div>\r\n                        <div className='drawer-content'>\r\n                            <SearchUser />\r\n                        </div>\r\n                    </div>\r\n                </Drawer>\r\n                <IconButton onClick={() => this.props.toggleDrawer(false)}><FontAwesomeIcon icon={faTimes} /></IconButton>\r\n                <div className='drawer-content'>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        inputVariant=\"outlined\"\r\n                        variant=\"inline\"\r\n                        label={labels.selectDate}\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={date}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={date => this.handleChangeDate(date)}\r\n                        fullWidth\r\n                    />\r\n                    <div className=\"time-pickers\">\r\n                        <TimePicker\r\n                            inputVariant=\"outlined\"\r\n                            variant=\"inline\"\r\n                            label={labels.selectStart}\r\n                            value={date}\r\n                            onChange={this.handleChangeDate}\r\n                        />\r\n                        <TimePicker\r\n                            inputVariant=\"outlined\"\r\n                            variant=\"inline\"\r\n                            label={labels.selectEnd}\r\n                            value={date}\r\n                            onChange={this.handleChangeDate}\r\n                        />\r\n                    </div>\r\n                    <div className=\"service-container\">\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth>Dodaj usługę</Button>\r\n                        <Paper>\r\n                            <p>Strzyrzenie</p>\r\n                            <p>Koloryzacja</p>\r\n                            <p>Regeneracja</p>\r\n                        </Paper>\r\n                    </div>\r\n                    <div className=\"client-container\">\r\n                        <div>\r\n                            <IconButton onClick={this.handleChangeOpen}><FontAwesomeIcon icon={faPlus} /></IconButton>\r\n                            <Button color=\"primary\">Zmień</Button>\r\n                        </div>\r\n                        <div>\r\n                            <IconButton onClick={this.handleChangeOpen}><FontAwesomeIcon icon={faPlus} /></IconButton>\r\n                            <Button color=\"primary\">Zmień</Button>\r\n                        </div>\r\n                    </div>\r\n                    <Button\r\n                        onClick={this.props.newEvent}\r\n                        className=\"add-button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                    >\r\n                        Dodaj wizytę\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddVisit\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { BottomNavigation, BottomNavigationAction, Avatar } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faPlusSquare, faChartBar } from '@fortawesome/free-regular-svg-icons'\r\nimport { faCog, faBoxOpen } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    small: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        marginTop: '-0.4rem'\r\n    }\r\n}));\r\n\r\nexport default function LabelBottomNavigation() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('calendar');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={ handleChange } className=\"bottom-nav\">\r\n            <BottomNavigationAction value=\"calendar\" icon={<Link to=\"/calendar\"><FontAwesomeIcon icon={faCalendarAlt} /></Link>} />\r\n            <BottomNavigationAction value=\"report\" icon={<Link to=\"/report\"><FontAwesomeIcon icon={faChartBar} /></Link>} />\r\n            <BottomNavigationAction value=\"account\" icon={<Avatar className={classes.small} />} />\r\n            <BottomNavigationAction value=\"add\" icon={<FontAwesomeIcon icon={faPlusSquare} />} />\r\n            <BottomNavigationAction value=\"settings\" icon={<Link to=\"/clients\"><FontAwesomeIcon icon={faCog} /></Link>}/>\r\n        </BottomNavigation>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport moment from \"moment\";\r\nimport events from './events'\r\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar'\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\r\nimport { Drawer, IconButton, Button, Paper } from '@material-ui/core'\r\nimport Toolbar from './components/DatePickerToolbar';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport '../../containers/Calendar/Calendar.scss';\r\nimport CalendarToolbar from \"./components/CalendarToolbar\";\r\nimport AddVisit from \"./components/AddVisit\";\r\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\r\nimport Navbar from \"../../components/layout/Navbar\";\r\n\r\n\r\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\r\n\r\nclass Dnd extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: events,\r\n            date: new Date(),\r\n            open: false,\r\n            slotInfo: undefined\r\n        };\r\n    }\r\n    getResourceMap = () => {\r\n        return [\r\n            { resourceId: 1, resourceTitle: 'Sabina', },\r\n            { resourceId: 2, resourceTitle: 'Michał', },\r\n            { resourceId: 3, resourceTitle: 'Paulina' }\r\n        ];\r\n    }\r\n\r\n    moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n        const { events } = this.state;\r\n\r\n        const idx = events.indexOf(event);\r\n        let allDay = event.allDay;\r\n\r\n        if (!event.allDay && droppedOnAllDaySlot) {\r\n            allDay = true\r\n        } else if (event.allDay && !droppedOnAllDaySlot) {\r\n            allDay = false\r\n        }\r\n\r\n        const updatedEvent = { ...event, start, end, allDay };\r\n\r\n        const nextEvents = [...events];\r\n        nextEvents.splice(idx, 1, updatedEvent);\r\n\r\n        this.setState({\r\n            events: nextEvents,\r\n        });\r\n    }\r\n\r\n    resizeEvent = ({ event, start, end }) => {\r\n        const { events } = this.state;\r\n\r\n        const nextEvents = events.map(existingEvent => {\r\n            return existingEvent.id === event.id\r\n                ? { ...existingEvent, start, end }\r\n                : existingEvent\r\n        });\r\n\r\n        this.setState({\r\n            events: nextEvents,\r\n        })\r\n\r\n    };\r\n\r\n    newEvent = (event = this.state.slotInfo) => {\r\n        let idList = this.state.events.map(a => a.id)\r\n        let newId = Math.max(...idList) + 1\r\n        let hour = {\r\n            id: newId,\r\n            title: 'Koloryzacja z Magdą',\r\n            start: event.start,\r\n            end: event.end,\r\n            resourceId: event.resourceId\r\n        };\r\n        this.setState({\r\n            events: this.state.events.concat([hour]),\r\n        })\r\n        this.toggleDrawer(false);\r\n    }\r\n\r\n    handleChangeDate = (date) => {\r\n        this.setState({date})\r\n    }\r\n\r\n    toggleDrawer = (open = true, slotInfo) => {\r\n        console.log(slotInfo)\r\n        this.setState({open});\r\n        if (slotInfo) {\r\n            this.setState({slotInfo});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const localizer = momentLocalizer(moment);\r\n        const {date, events, open} = this.state;\r\n        return (\r\n            <div>\r\n                <Drawer anchor=\"bottom\" open={open}>\r\n                    <AddVisit toggleDrawer={this.toggleDrawer} newEvent={this.newEvent} />\r\n                </Drawer>\r\n                <DragAndDropCalendar\r\n                    selectable\r\n                    localizer={localizer}\r\n                    events={events}\r\n                    onEventDrop={this.moveEvent}\r\n                    resizable\r\n                    step={30}\r\n                    components={{\r\n                        toolbar: ()=><Toolbar handleChangeDate={this.handleChangeDate}/>,\r\n                        resourceHeader: ({resource}) => <CalendarToolbar employee={resource} />,\r\n                        timeGutterHeader:  () => null\r\n                    }}\r\n                    style={{minHeight: '100vh'}}\r\n                    onEventResize={this.resizeEvent}\r\n                    onSelectSlot={(slotInfo) => this.toggleDrawer(true, slotInfo)}\r\n                    onDragStart={() => null}\r\n                    defaultView={Views.DAY}\r\n                    defaultDate={new Date()}\r\n                    resources={this.getResourceMap()}\r\n                    resourceIdAccessor=\"resourceId\"\r\n                    resourceTitleAccessor=\"resourceTitle\"\r\n                />\r\n                <Navbar/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dnd\r\n","import * as React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel,\r\n    FormControlLabel,\r\n} from '@material-ui/core';\r\nimport MuiTextField from '@material-ui/core/TextField';\r\nimport {\r\n    fieldToTextField,\r\n    TextField,\r\n    TextFieldProps,\r\n    Select,\r\n    Switch,\r\n} from 'formik-material-ui';\r\nimport {\r\n    TimePicker,\r\n    DatePicker,\r\n    DateTimePicker,\r\n} from 'formik-material-ui-pickers';\r\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\n\r\nconst LoginForm = () => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                login: '',\r\n                password: ''\r\n            }}\r\n            onSubmit={(values) => {\r\n               console.log(values)\r\n            }}\r\n            render={({submitForm, isSubmitting, values, setFieldValue}) => (\r\n                <Form>\r\n                    <Field\r\n                        component={TextField}\r\n                        variant=\"outlined\"\r\n                        name=\"login\"\r\n                        type=\"login\"\r\n                        label=\"login\"\r\n                    />\r\n                    <Field\r\n                        component={TextField}\r\n                        variant=\"outlined\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"password\"\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting}\r\n                        onClick={submitForm}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import * as React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel,\r\n    FormControlLabel,\r\n} from '@material-ui/core';\r\nimport MuiTextField from '@material-ui/core/TextField';\r\nimport {\r\n    fieldToTextField,\r\n    TextField,\r\n    TextFieldProps,\r\n    Select,\r\n    Switch,\r\n} from 'formik-material-ui';\r\nimport {\r\n    TimePicker,\r\n    DatePicker,\r\n    DateTimePicker,\r\n} from 'formik-material-ui-pickers';\r\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\nimport labels from '../../../assets/labels';\r\nimport {ADD_USER} from \"../../Calendar/components/constants\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst RegistrationForm = () => {\r\n    const [addUser, {  loading, error, data }] = useMutation(ADD_USER, { onError(err) { console.log(err) }});\r\n    const ValidationTextField = withStyles({\r\n        root: {\r\n            '& input:valid + fieldset': {\r\n                borderColor: 'green',\r\n                borderWidth: 2,\r\n            },\r\n            '& input:invalid + fieldset': {\r\n                borderColor: 'red',\r\n                borderWidth: 2,\r\n            }\r\n        },\r\n    })(TextField);\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                phone: '+ 48',\r\n                activationCode: '',\r\n                name: '',\r\n                surname: '',\r\n                password: ''\r\n            }}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.phone) {\r\n                    errors.phone = labels.phoneRequiredError;\r\n                } else if (\r\n                    values.phone.length !== 9\r\n                ) {\r\n                    console.log(values.phone.length)\r\n                    errors.phone = labels.phoneFormatError;\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(values) => {\r\n               console.log(values)\r\n            }}\r\n            render={({submitForm, isSubmitting, values, setFieldValue, errors}) => (\r\n                <Form>\r\n                    <Field\r\n                        component={ValidationTextField}\r\n                        autoFocus\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        name=\"phone\"\r\n                        type=\"pone\"\r\n                        label={labels.phoneNumber}\r\n                        onKeyUp={() => {!errors.phone && addUser({variables: {newUserInput: {phone: values.phone}}})}}\r\n                    />\r\n                    {/*<Button*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*    color=\"primary\"*/}\r\n                    {/*    disabled={isSubmitting}*/}\r\n                    {/*    onClick={submitForm}*/}\r\n                    {/*>*/}\r\n                    {/*    Submit*/}\r\n                    {/*</Button>*/}\r\n                </Form>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Drawer, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport RegistrationForm from \"./components/RegistrationForm\";\r\nimport './Registration.scss'\r\nimport labels from '../../assets/labels'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Registration  = () => {\r\n    const [openLogin, setLoginOpen] = React.useState(false);\r\n    const [openRegistration, setRegistrationOpen] = React.useState(false);\r\n    return (\r\n        <div className='registration'>\r\n            <Link to=\"/calendar\"><h1>{labels.joinTitle}<strong>{labels.appTitle}</strong></h1></Link>\r\n            <p>{labels.startTitle}</p>\r\n            <p>{labels.startCopy}</p>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemIcon>\r\n                        <FontAwesomeIcon icon={faCircle} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={labels.yourAccount} />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemIcon>\r\n                        <FontAwesomeIcon icon={faCircle} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={labels.yourCompanyAccount} />\r\n                </ListItem>\r\n            </List>\r\n            <p className=\"primary-info\">{labels.accountCreationTime}</p>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setRegistrationOpen(true)}>\r\n                {labels.createAccountButtonLabel}\r\n            </Button>\r\n            <Drawer anchor=\"right\" open={openLogin} onClose={() => setLoginOpen(false)}>\r\n                <div className='drawer-middle'>\r\n                    <div className=\"drawer-header\">\r\n                    </div>\r\n                    <div className='drawer-content'>\r\n                        <LoginForm />\r\n                    </div>\r\n                </div>\r\n            </Drawer>\r\n            <Drawer anchor=\"right\" open={openRegistration} onClose={() => setRegistrationOpen(false)}>\r\n                <div className='drawer-middle'>\r\n                    <div className=\"drawer-header\">\r\n                    </div>\r\n                    <div className='drawer-content'>\r\n                        <RegistrationForm />\r\n                    </div>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react';\r\nimport labels from '../../assets/labels';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\n\r\nconst EXCHANGE_RATES = gql`\r\n  {\r\n    companies {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst Dashboard  = () => {\r\n    const { loading, error, data } = useQuery(EXCHANGE_RATES);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n\r\n    return data.companies.map(({ name }) => (\r\n        <div>\r\n            <p>{name}</p>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, Link, Switch, Route, Redirect, useParams } from 'react-router-dom';\n\nconst EXCHANGE_RATES = gql`\n  query client($id: String!) {\n    client(id: $id) {\n        _id\n      name\n      surname\n      additionalInfo\n    }\n  }\n`;\n\nconst ClientForm  = () => {\n    let { id } = useParams();\n\n    const {loading, error, data } = useQuery(EXCHANGE_RATES, {variables: {id}});\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n\n    return(\n      <div>\n        Imię: {data.client.name} <br />\n        Nazwisko: {data.client.surname} <br />\n        Telefon: {data.client.phone} <br />\n        Dodatkowe Info: {data.client.additionalInfo} <br /><br />\n        <Link to=\"/clients\">\n        Lista\n      </Link>\n      </div>\n    )\n}\n\nexport default ClientForm;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, useRouteMatch,  Link, Switch, Route, Redirect, useParams } from 'react-router-dom';\n\nconst EXCHANGE_RATES = gql`\n  {\n    clients {\n      name\n      surname\n      _id\n    }\n  }\n`;\n\nconst ClientsList  = () => {\n    const { loading, error, data } = useQuery(EXCHANGE_RATES);\n    let match = useRouteMatch();\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return(\n      <div>\n        { data.clients.map(({ _id, name }) => (\n            <p key={_id}>\n              <Link to={`${match.url}/${_id}`}>\n              {name}\n            </Link>\n            </p>\n         )) }\n     </div>\n    )\n}\n\nexport default ClientsList;\n","import React from 'react';\nimport { BrowserRouter as Router, useRouteMatch, Link, BrowserRouter,  Switch, Route, Redirect, useParams } from 'react-router-dom';\n\nimport ClientForm from './components/Form';\nimport ClientsList from './components/List';\n\nconst Clients  = () => {\n  let match = useRouteMatch();\n\n    return(\n      <Switch>\n        <Route path={`${match.path}/:id`}>\n          <ClientForm />\n        </Route>\n        <Route path={`${match.path}`}>\n          <ClientsList />\n        </Route>\n      </Switch>\n    );\n}\n\nexport default Clients;\n","import React from 'react';\r\nimport labels from '../../assets/labels';\r\n\r\nconst Warehouse  = () => <h1>{labels.warehouseTitle}</h1>\r\n\r\nexport default Warehouse;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Calendar from './containers/Calendar';\nimport Registration from './containers/Reqistration';\nimport Report from './containers/Reports';\nimport Clients from './containers/Client';\nimport Warehouse from './containers/Warehouse';\nimport './App.scss';\n\nconst App  = () => (\n    <div className=\"page-container\">\n        <Router>\n            <Switch>\n                <div className=\"wrapper\">\n                    <Route path=\"/registration\"><Registration /></Route>\n                    <Route path=\"/calendar\"><Calendar /></Route>\n                    <Route path=\"/report\"><Report /></Route>\n                    <Route path=\"/clients\"><Clients /></Route>\n                    <Route path=\"/warehouse\"><Warehouse /></Route>\n                    <Route path=\"/\"><Redirect to=\"/registration\" /></Route>\n                </div>\n            </Switch>\n        </Router>\n    </div>\n);\n\nexport default App;\n","export const GET_EVENTS = 'GET_EVENTS';\r\nexport const GET_EVENTS_SUCCESS = 'GET_EVENTS_SUCCESS';\r\nexport const GET_EVENTS_ERROR = 'GET_EVENTS_ERROR';\r\n\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_ERROR = 'GET_USERS_ERROR';\r\n","export const statusType = {\r\n    success: 'success',\r\n    error: 'error',\r\n    loading: 'loading'\r\n};\r\n","import { GET_EVENTS, GET_EVENTS_SUCCESS, GET_EVENTS_ERROR } from '../actions/actionTypes';\r\nimport { statusType } from '../constants';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    status: null\r\n};\r\n\r\nconst heroes = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_EVENTS: {\r\n            return {\r\n                ...state,\r\n                data: [],\r\n                status: statusType.loading\r\n            };\r\n        }\r\n        case GET_EVENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                status: statusType.success\r\n            };\r\n        }\r\n        case GET_EVENTS_ERROR: {\r\n            return {\r\n                ...state,\r\n                data: [],\r\n                status: statusType.error\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default heroes;\r\n","import { combineReducers } from 'redux';\nimport events from './events';\n\nexport default combineReducers({\n    events\n});\n","export const api = 'http://fryzjer-nest.herokuapp.com/graphql';\r\nexport const localApi = 'http://localhost:3000';\r\n","import React from 'react'\nimport { render } from 'react-dom'\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux'\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { theme } from './assets/theme';\n\nimport App from './App'\nimport rootReducer from './reducers'\nimport './assets/styles/styles.scss';\nimport ApolloClient from \"apollo-boost\";\nimport {api} from \"./enviroments/config\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconst client = new ApolloClient({\n    uri: api,\n    onError: (({ graphQLErrors, networkError, operation, forward }) => {\n        if (graphQLErrors) {\n            for (let err of graphQLErrors) {\n                switch (err.extensions.code) {\n                    case 'UNAUTHENTICATED':\n                        // error code is set to UNAUTHENTICATED\n                        // when AuthenticationError thrown in resolver\n\n                        // modify the operation context with a new token\n                        const oldHeaders = operation.getContext().headers;\n                        operation.setContext({\n                            headers: {\n                                ...oldHeaders,\n                            },\n                        });\n                        // retry the request, returning the new observable\n                        return forward(operation);\n                }\n            }\n        }\n        if (networkError) {\n            console.log(`[Network error]: ${networkError}`);\n            // if you would also like to retry automatically on\n            // network errors, we recommend that you use\n            // apollo-link-retry\n        }\n    })\n});\n\nrender(\n  <ApolloProvider client={client}>\n      <Provider store={ store }>\n          <MuiThemeProvider theme={ theme }>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <CssBaseline />\n                  <App />\n              </MuiPickersUtilsProvider>\n          </MuiThemeProvider>\n      </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}